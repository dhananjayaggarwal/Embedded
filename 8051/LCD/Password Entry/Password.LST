C51 COMPILER V8.16   PASSWORD                                                              06/08/2017 12:38:41 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE PASSWORD
OBJECT MODULE PLACED IN Password.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Password.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX51.H>
   2          #include<string.h>
   3          sbit rs = P2^4;
   4          sbit en = P2^5;
   5          #define lcdport P0
   6          sbit R1=P1^0;
   7          sbit R2=P1^1;
   8          sbit R3=P1^2;
   9          sbit R4=P1^3;
  10          sbit C1=P1^5;
  11          sbit C2=P1^6;
  12          sbit C3=P1^7;
  13          
  14          char keycheck();        //It returns a character which is send to lcd data
  15          
  16          unsigned char keyno, key, flag;  //because character need to be shown
  17          unsigned int i=0;
  18          unsigned char input[10];
  19          void lcd_init();
  20          void lcd_data(unsigned char dat);
  21          void lcd_command(unsigned char comd);
  22          void delay(int);
  23          void lcd_string(unsigned char *s);
  24          void keyaction(char key);
  25          void passcheck(char);
  26          
  27          void main()
  28          {
  29   1      
  30   1      lcd_init();
  31   1      i=0;
  32   1      
  33   1      while(1){
  34   2      
  35   2              key=keycheck();                  //Call to return which key was pressed
  36   2              keyaction(key);  //Send keypressed to data
  37   2               passcheck(key);   //agar * dabaya to check karo entered data is matched to password or not
  38   2      
  39   2      }
  40   1      }
  41          
  42          
  43          void lcd_init()                 //To initialize working of lcd
  44          {
  45   1      lcd_command(0x02);                // Cursor at home
  46   1      delay(15000);
  47   1      
  48   1      lcd_command(0x28);               //Function Set to 4 bit data bus
  49   1      delay(40);
  50   1      
  51   1      lcd_command(0x06);                //Entry Mode set increament/no shift
  52   1      delay(40);
  53   1      
  54   1      lcd_command(0x0f);                //Display on,cursor displayed,blinks
  55   1      delay(40);
C51 COMPILER V8.16   PASSWORD                                                              06/08/2017 12:38:41 PAGE 2   

  56   1      
  57   1      lcd_command(0x01);                //Clears all display and returns cursor to home(address 0)
  58   1      delay(16500);
  59   1      }
  60          
  61          
  62          void lcd_command(unsigned char comd)      //To send commands using 4 bit bus
  63          {
  64   1      rs=0;                                                                     //register select is low which implies command
  65   1      
  66   1      lcdport=(comd&0xf0);                                       //Most Significant 4 bits are send to microcontroller first
  67   1      en=1;                                                                      //when enable drops from high to low, bit is transferred to controller
  68   1      delay(1000);
  69   1      en=0;
  70   1                                                                                              //Nest LSB's are transferred
  71   1      lcdport=(comd<<4);
  72   1      en=1;
  73   1      delay(1000);
  74   1      en=0;
  75   1      
  76   1      }
  77          
  78          void lcd_data(unsigned char dat)                //To send data to lcd
  79          {
  80   1      rs=1;                                                                   //rs high implies read or write, we perform only write as we keep R/W pin grounded
  81   1      
  82   1      lcdport=(dat&0xf0);
  83   1      en=1;
  84   1      delay(1000);
  85   1      en=0;
  86   1      
  87   1      lcdport=(dat<<4);
  88   1      en=1;
  89   1      delay(1000);
  90   1      en=0;
  91   1      
  92   1      }
  93          
  94          
  95                                                                                     
  96          void delay(int t)                                          //To delay
  97          {
  98   1              int i;
  99   1              for(i=0;i<t;i++);
 100   1      }
 101          
 102          char keycheck()
 103          {
 104   1        C1=1;
 105   1        C2=1;
 106   1        C3=1;
 107   1         keyno='n';           //agar koi key press ni ki humne to 
 108   1        C1=0;
 109   1         if(R1==0)
 110   1        {
 111   2          keyno='3';
 112   2        }
 113   1         if(R2==0)
 114   1        {
 115   2          keyno='6';
 116   2        }
 117   1              if(R3==0)
C51 COMPILER V8.16   PASSWORD                                                              06/08/2017 12:38:41 PAGE 3   

 118   1              {
 119   2                      keyno='9';
 120   2              }
 121   1         if(R4==0)
 122   1         {
 123   2              keyno='#';
 124   2         }
 125   1      
 126   1        C1=1;
 127   1        C2=0;
 128   1          if(R1==0)
 129   1        {
 130   2          keyno='2';
 131   2        }
 132   1        if(R2==0)
 133   1        {
 134   2          keyno='5';
 135   2         }
 136   1      
 137   1              if(R3==0)
 138   1              {
 139   2                      keyno='8';
 140   2              }
 141   1         if(R4==0)
 142   1         {
 143   2              keyno='0';
 144   2         }
 145   1        C2=1;
 146   1        C3=0;
 147   1        if(R1==0)
 148   1        {
 149   2          keyno='1';
 150   2        }
 151   1        if(R2==0)
 152   1        {
 153   2          keyno='4';
 154   2              } 
 155   1        if(R3==0)
 156   1        {
 157   2         keyno='7';
 158   2        } 
 159   1              
 160   1         if(R4==0)
 161   1         {
 162   2              keyno='*';
 163   2         }
 164   1        C3=1;
 165   1      
 166   1        return keyno;
 167   1      }
 168          
 169          void keyaction(char key)        //PERFORM action according to key pressed
 170          {
 171   1        if(keyno=='n')
 172   1        flag=1;
 173   1      
 174   1              else if(flag==1)
 175   1              {
 176   2                      flag=0;
 177   2      
 178   2                      if(i<5)                                            //since our password length is 5, so 5 baar loop chalaya taaki 5 key press lele
 179   2                      {
C51 COMPILER V8.16   PASSWORD                                                              06/08/2017 12:38:41 PAGE 4   

 180   3                              lcd_data(key);   //Send keypressed to data
 181   3                              input[i]=key;    //String mei key store key
 182   3                              i++;
 183   3                              input[i]='\0';   //string mei key aane ke baad last element should be null
 184   3                      }
 185   2               }
 186   1      }
 187          
 188          void passcheck(char check)
 189          {  if(check=='*')                         //agar * key press key tabhi ye function chalga, i.e. it acts as enter
 190   1              {
 191   2              char pass[] = {"18793"};   //our password
 192   2      
 193   2              char access[] = {"ACCESS GRANTED"};     
 194   2              char denied[] = {"ACCESS DENIED"};
 195   2               int result;
 196   2               result = strcmp(pass, input);    //compare two strings
 197   2      
 198   2               if(result==0)                                     //agar strings are same
 199   2               {
 200   3                      lcd_command(0x01);
 201   3                      lcd_command(0x0c);
 202   3                      lcd_string(&access[0]);                  //access granted ko data line par bhejne ke lie
 203   3              }               
 204   2              else
 205   2              {
 206   3               lcd_command(0x01);
 207   3               lcd_command(0x0c);
 208   3               lcd_string(&denied[0]);
 209   3               
 210   3              }
 211   2              }
 212   1      }
 213          
 214          void lcd_string(unsigned char *s)
 215          {
 216   1       int i=0;
 217   1              while(s[i]!='\0')
 218   1              {
 219   2                      if(i==16)
 220   2                      {
 221   3                              lcd_command(0xc0);
 222   3                      }
 223   2                      lcd_data(s[i]);
 224   2                      i++;
 225   2              }
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    502    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15      45
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
